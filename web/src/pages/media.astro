---
import Page from "@/layouts/Page.astro"
import FormattedDate from "@/components/FormattedDate.astro"
import { SITE_TITLE } from "@/consts"
import { api } from "@/lib/api"
import type { Media } from "@/lib/types"

let mediaItems: Media[] = [];
let error: string | null = null;

try {
  const response = await api.getMedia();
  mediaItems = response.data;
} catch (e) {
  error = e instanceof Error ? e.message : 'Failed to fetch media';
  console.error('Error fetching media:', e);
}
---

<Page title={`Media - ${SITE_TITLE}`} description="Media files from our CMS">
    <Fragment slot="head">
        <style>
            main {
                width: 960px;
                max-width: calc(100% - 2em);
                margin: auto;
                padding: 3em 1em;
            }
            .media-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
                gap: 1.5rem;
                margin-top: 2rem;
            }
            .media-card {
                border: 1px solid rgb(var(--gray-light));
                border-radius: 8px;
                overflow: hidden;
                background: white;
                transition: transform 0.2s ease;
            }
            .media-card:hover {
                transform: translateY(-2px);
                box-shadow: var(--box-shadow);
            }
            .media-preview {
                height: 200px;
                background: rgb(var(--gray-light));
                display: flex;
                align-items: center;
                justify-content: center;
                color: rgb(var(--gray));
                font-size: 3rem;
            }
            .media-info {
                padding: 1rem;
            }
            .media-filename {
                font-weight: 600;
                color: rgb(var(--black));
                margin: 0 0 0.5rem 0;
                word-break: break-all;
            }
            .media-details {
                font-size: 0.9rem;
                color: rgb(var(--gray));
                margin: 0.25rem 0;
            }
            .media-size {
                color: var(--accent);
                font-weight: 500;
            }
            .error {
                background: #fee;
                border: 1px solid #fcc;
                color: #c00;
                padding: 1rem;
                border-radius: 8px;
                margin: 2rem 0;
            }
        </style>
    </Fragment>
    <main>
        <h1>Media Library</h1>
        <p>Files uploaded to our content management system</p>

        {error && (
            <div class="error">
                <strong>Error:</strong> {error}
            </div>
        )}

        {mediaItems.length === 0 && !error && (
            <p>No media files found. Check if your Go backend is running.</p>
        )}

        <div class="media-grid">
            {mediaItems.map((media) => (
                <div class="media-card">
                    <div class="media-preview">
                        {media.mime_type && media.mime_type.startsWith('image/') ? 'üñºÔ∏è' : 
                            media.mime_type && media.mime_type.startsWith('video/') ? 'üé•' : 
                            media.mime_type && media.mime_type.startsWith('audio/') ? 'üéµ' : 'üìÑ'}
                    </div>
                    <div class="media-info">
                        <h3 class="media-filename">{media.original_name || media.filename || 'Unknown file'}</h3>
                        <div class="media-details">Type: {media.mime_type || 'Unknown'}</div>
                        <div class="media-details">
                            Size: <span class="media-size">{media.size ? (media.size / 1024).toFixed(1) : '0'} KB</span>
                        </div>
                        <div class="media-details">
                            Created: {new Date(media.created_at).toLocaleDateString()}
                        </div>
                    </div>
                </div>
            ))}
        </div>
    </main>
</Page>