---
import Admin from '@/layouts/Admin/Layout.astro';
import MediaCard from '@/components/gl-admin/media/MediaCard.astro';
import "@/assets/styles/admin/media-page.scss";
import { api, getMediaURL } from '@/lib/api';
import type { Media } from '@/lib/types';

let mediaItems: Media[] = [];
let error: string | null = null;
let total = 0;

try {
  const response = await api.getMedia();
  mediaItems = response.data;
  total = response.meta.total;
} catch (e) {
  error = e instanceof Error ? e.message : 'Failed to fetch media';
  console.error('Error fetching media:', e);
}

function getFileIcon(mediaPath: string): string {
  const ext = mediaPath.split('.').pop()?.toLowerCase();
  if (['jpg', 'jpeg', 'png', 'gif', 'webp', 'bmp', 'svg'].includes(ext || '')) return 'üñºÔ∏è';
  if (['mp4', 'mov', 'avi', 'mkv', 'webm'].includes(ext || '')) return 'üé•';
  if (['mp3', 'wav', 'ogg', 'm4a'].includes(ext || '')) return 'üéµ';
  if (['pdf'].includes(ext || '')) return 'üìÑ';
  if (['doc', 'docx'].includes(ext || '')) return 'üìù';
  return 'üìÅ';
}

function isImage(mediaPath: string): boolean {
  const ext = mediaPath.split('.').pop()?.toLowerCase();
  return ['jpg', 'jpeg', 'png', 'gif', 'webp', 'bmp'].includes(ext || '');
}
---

<Admin title="Media Library" description="Manage your media files">
  <div class="gl-admin-media-library">
    <!-- Header -->
    <div class="gl-admin-media-header">
      <div class="gl-admin-media-header-left">
        <h1 class="gl-admin-media-header__title">Media Library</h1>
        <!-- adding this later above the load more <p class="gl-admin-media-header__count">{total} {total === 1 ? 'item' : 'items'}</p> -->
      </div>
      <div class="gl-admin-media-header-right">
        <!-- add filters here -->
        <!-- add search functionality -->
        <div class="gl-admin-media-header__search-box">
          <input type="text" id="media-search" placeholder="Search media..." />
          <span class="search-icon">üîç</span>
        </div>
      </div>
    </div>

    <div class="upload-area" id="upload-area">
      <div class="upload-content">
        <h3>Drop files to upload</h3>
        <div>
          <span>or</span> 
          <button class="upload-btn" id="select-files">select files</button>
          
        </div>
        <small>Maximum size: 50MB. Supported: Images, Videos, Audio, Documents</small>
      </div>
      <input type="file" id="file-input" multiple accept="image/*,video/*,audio/*,.pdf,.doc,.docx,.txt" style="display: none;" />
    </div>

    <!-- Upload Progress -->
    <div class="upload-progress" id="upload-progress" style="display: none;">
      <div class="progress-item" id="progress-template" style="display: none;">
        <div class="progress-info">
          <span class="file-name"></span>
          <span class="file-size"></span>
        </div>
        <div class="progress-bar">
          <div class="progress-fill"></div>
        </div>
        <span class="progress-status"></span>
      </div>
    </div>

    {error && (
      <div class="error-message">
        <strong>Error:</strong> {error}
      </div>
    )}

    <div class="media-container" id="media-container">
      <div class="media-grid" id="media-grid">
        {mediaItems.map((media) => (
          <MediaCard media={media} />
        ))}
      </div>

      {mediaItems.length === 0 && !error && (
        <div class="empty-state">
          <div class="empty-icon">üìÇ</div>
          <h3>No media files yet</h3>
          <p>Upload your first file by dropping it above or clicking "select files"</p>
        </div>
      )}
    </div>
  </div>

  <!-- Edit Modal -->
  <div class="modal" id="edit-modal" style="display: none;">
    <div class="modal-content">
      <div class="modal-header">
        <h3>Edit Media</h3>
        <button class="modal-close" id="close-modal">&times;</button>
      </div>
      <form class="modal-body" id="edit-form">
        <input type="hidden" id="edit-id" />
        
        <div class="form-group">
          <label for="edit-name">Name:</label>
          <input type="text" id="edit-name" name="name" required />
        </div>
        
        <div class="form-group">
          <label for="edit-description">Description:</label>
          <textarea id="edit-description" name="description" rows="3" required></textarea>
        </div>
        
        <div class="form-group">
          <label for="edit-alt">Alt Text:</label>
          <input type="text" id="edit-alt" name="alt" required />
        </div>

        <div class="form-actions">
          <button type="button" class="btn btn-secondary" id="cancel-edit">Cancel</button>
          <button type="submit" class="btn btn-primary">Save Changes</button>
        </div>
      </form>
    </div>
  </div>

  <!-- Toast Notifications -->
  <div class="toast-container" id="toast-container"></div>


  <script>
      import { api, getMediaURL } from '@/lib/api';
    import type { Media } from '@/lib/types';

    // Global variables
    let mediaItems: Media[] = [];
    let currentEditId: number | null = null;

    // DOM elements
    const uploadArea = document.getElementById('upload-area')!;
    const fileInput = document.getElementById('file-input')! as HTMLInputElement;
    const selectFilesBtn = document.getElementById('select-files')!;
    const uploadProgress = document.getElementById('upload-progress')!;
    const progressTemplate = document.getElementById('progress-template')!;
    const mediaGrid = document.getElementById('media-grid')!;
    const editModal = document.getElementById('edit-modal')!;
    const editForm = document.getElementById('edit-form')! as HTMLFormElement;
    const closeModal = document.getElementById('close-modal')!;
    const cancelEdit = document.getElementById('cancel-edit')!;
    const mediaSearch = document.getElementById('media-search')! as HTMLInputElement;
    const toastContainer = document.getElementById('toast-container')!;
  </script>
   <script>
    import { initializeMediaCardHandlers } from '@/scripts/media-card-handlers';
    
    document.addEventListener('DOMContentLoaded', () => {
      initializeMediaCardHandlers();
    });
  </script>
</Admin>