// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"encoding/json"
	"time"

	"github.com/google/uuid"
)

type Medium struct {
	ID               int64           `json:"id"`
	Name             string          `json:"name"`
	Description      string          `json:"description"`
	Alt              string          `json:"alt"`
	MediaPath        string          `json:"media_path"`
	UserID           int64           `json:"user_id"`
	CreatedAt        time.Time       `json:"created_at"`
	ChangedAt        time.Time       `json:"changed_at"`
	FileSize         int64           `json:"file_size"`
	MimeType         string          `json:"mime_type"`
	Width            int32           `json:"width"`
	Height           int32           `json:"height"`
	Duration         int32           `json:"duration"`
	OriginalFilename string          `json:"original_filename"`
	Metadata         json.RawMessage `json:"metadata"`
}

type Post struct {
	ID          int64     `json:"id"`
	Title       string    `json:"title"`
	Description string    `json:"description"`
	Content     string    `json:"content"`
	UserID      int64     `json:"user_id"`
	Username    string    `json:"username"`
	Url         string    `json:"url"`
	CreatedAt   time.Time `json:"created_at"`
	ChangedAt   time.Time `json:"changed_at"`
}

type PostMedium struct {
	PostID  int64 `json:"post_id"`
	MediaID int64 `json:"media_id"`
	Order   int32 `json:"order"`
}

type PostsTaxonomy struct {
	PostID     int64 `json:"post_id"`
	TaxonomyID int64 `json:"taxonomy_id"`
}

type Session struct {
	ID           uuid.UUID `json:"id"`
	UserID       int64     `json:"user_id"`
	Username     string    `json:"username"`
	RefreshToken string    `json:"refresh_token"`
	UserAgent    string    `json:"user_agent"`
	ClientIp     string    `json:"client_ip"`
	IsBlocked    bool      `json:"is_blocked"`
	ExpiresAt    time.Time `json:"expires_at"`
	CreatedAt    time.Time `json:"created_at"`
}

type Taxonomy struct {
	ID          int64  `json:"id"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

type User struct {
	ID                int64     `json:"id"`
	Username          string    `json:"username"`
	FullName          string    `json:"full_name"`
	Email             string    `json:"email"`
	HashedPassword    string    `json:"hashed_password"`
	PasswordChangedAt time.Time `json:"password_changed_at"`
	CreatedAt         time.Time `json:"created_at"`
	Role              string    `json:"role"`
}

type UserPost struct {
	PostID int64 `json:"post_id"`
	UserID int64 `json:"user_id"`
	Order  int32 `json:"order"`
}
